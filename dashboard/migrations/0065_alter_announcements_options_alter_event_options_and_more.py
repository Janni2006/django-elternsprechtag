# Generated by Django 5.0.6 on 2024-09-10 11:46

import datetime
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('dashboard', '0064_baseeventgroup_disable_automatic_changes_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='announcements',
            options={'verbose_name': 'Announcement', 'verbose_name_plural': 'Announcements'},
        ),
        migrations.AlterModelOptions(
            name='event',
            options={'permissions': [('book_event', 'The user is allowed to book an event. Without this permission the user will be completely blocked from booking.'), ('inquiry_prebook_event', 'The user is allowed to book an event because an inquiry was issued to him.'), ('condition_prebook_event', 'The user is allowed to book an event before the official booking period because he has an e.g. medical condition.'), ('book_double_event', 'The user is allowed to book a double event with all teachers because of an medical condition.')], 'verbose_name': 'Event', 'verbose_name_plural': 'Events'},
        ),
        migrations.AlterModelOptions(
            name='eventchangeformula',
            options={'permissions': [('approve_disapprove', 'Can approve/disapprove the formulars for other users')], 'verbose_name': 'Event creation formula', 'verbose_name_plural': 'Event creation formulas'},
        ),
        migrations.AlterModelOptions(
            name='inquiry',
            options={'verbose_name': 'Inquiry', 'verbose_name_plural': 'Inquries'},
        ),
        migrations.AlterModelOptions(
            name='sitesettings',
            options={'verbose_name': 'SiteSettings', 'verbose_name_plural': 'SiteSettings'},
        ),
        migrations.AlterField(
            model_name='baseeventgroup',
            name='lead_inquiry_start',
            field=models.DateField(default=django.utils.timezone.now, help_text='Specify when parents with inquiries can start booking for corresponding events'),
        ),
        migrations.AlterField(
            model_name='baseeventgroup',
            name='lead_start',
            field=models.DateField(default=django.utils.timezone.now, help_text='Specify when all parents can book events'),
        ),
        migrations.AlterField(
            model_name='dayeventgroup',
            name='lead_inquiry_start',
            field=models.DateField(default=django.utils.timezone.now, help_text='Specify when parents with inquiries can start booking for corresponding events'),
        ),
        migrations.AlterField(
            model_name='dayeventgroup',
            name='lead_start',
            field=models.DateField(default=django.utils.timezone.now, help_text='Specify when all parents can book events'),
        ),
        migrations.AlterField(
            model_name='event',
            name='status',
            field=models.IntegerField(choices=[(0, 'Unoccupied'), (1, 'Occupied'), (2, 'Inquiry pending')], default=0),
        ),
        migrations.AlterField(
            model_name='eventchangeformula',
            name='date',
            field=models.DateField(default=django.utils.timezone.now, verbose_name='Date'),
        ),
        migrations.AlterField(
            model_name='eventchangeformula',
            name='end_time',
            field=models.TimeField(blank=True, null=True, verbose_name='End time'),
        ),
        migrations.AlterField(
            model_name='eventchangeformula',
            name='start_time',
            field=models.TimeField(blank=True, null=True, verbose_name='Start time'),
        ),
        migrations.AlterField(
            model_name='eventchangeformula',
            name='status',
            field=models.IntegerField(choices=[(0, 'Waiting to be filled'), (1, 'Waiting for approval'), (2, 'Approved'), (3, 'Disapproved')], default=0),
        ),
        migrations.AlterField(
            model_name='eventchangeformula',
            name='teacher',
            field=models.ForeignKey(limit_choices_to={'role': 1}, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Teacher'),
        ),
        migrations.AlterField(
            model_name='inquiry',
            name='respondent_reaction',
            field=models.IntegerField(choices=[(0, 'No response'), (1, 'Inquiry accepted'), (3, 'Inquiry dismissed')], default=0),
        ),
        migrations.AlterField(
            model_name='sitesettings',
            name='event_duration',
            field=models.DurationField(default=datetime.timedelta(seconds=450), help_text='Here you can set the general length of an event. The lenth applies to all events created with the function.'),
        ),
        migrations.AlterField(
            model_name='sitesettings',
            name='lead_inquiry_start',
            field=models.DateField(default=django.utils.timezone.now, help_text='Specify when parents with inquiries can start booking for corresponding events'),
        ),
        migrations.AlterField(
            model_name='sitesettings',
            name='lead_start',
            field=models.DateField(default=django.utils.timezone.now, help_text='Specify when all parents can book events'),
        ),
        migrations.AlterField(
            model_name='teachereventgroup',
            name='lead_inquiry_start',
            field=models.DateField(default=django.utils.timezone.now, help_text='Specify when parents with inquiries can start booking for corresponding events'),
        ),
        migrations.AlterField(
            model_name='teachereventgroup',
            name='lead_start',
            field=models.DateField(default=django.utils.timezone.now, help_text='Specify when all parents can book events'),
        ),
    ]
